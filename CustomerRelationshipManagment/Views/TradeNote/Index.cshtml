@model IEnumerable<CustomerRelationshipManagment.Models.TradeNoteModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<table class="table">
    <thead>
        <tr>
            @if (
                     @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "2" ||
                     @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "3"
                )
            {
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
            }
            <th>
                @Html.DisplayNameFor(model => model.Contents)
            </th>
            <th>
                Associated company
            </th>
            @if (
                     @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "2" ||
                     @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "3"
                )
            {
                <th>
                    Creator
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @if (
                      @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "2" ||
                      @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "3"
                  )
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                }
                <td>
                    @{ 
                        String toDisplay = item.Contents;
                        <textarea cols="70" rows="3" readonly>@toDisplay</textarea>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AssociatedCompany) [@item.AssociatedCompanyId.ToString()]
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Creator)
                </td>
                <td>
                    @if (
                        @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "2" ||
                        @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "3"
                     )
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    }
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @if (
                        @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "2" ||
                        @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "3"
                     )
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <em>
        <a asp-action="PreviousPage">@ViewData["PreviousPageText"]</a> |
        <a asp-action="NextPage">@ViewData["NextPageText"]</a> :
        @{
            int currentPage = (int)ViewData["CurrentPage"];
            int numberOfPages = (int)ViewData["NumberOfPages"];
            int numberOfIndexesToDisplay = (int)ViewData["NumberOfIndexesToDisplay"];
            int pagesRemaining = numberOfPages - currentPage;
            int showFromPageNumber;
            int showUntilPageNumber;

            if (numberOfPages > numberOfIndexesToDisplay)
            {
                if (pagesRemaining < Math.Ceiling((float)numberOfIndexesToDisplay / 2))
                {
                    showFromPageNumber = numberOfPages - (int)(numberOfIndexesToDisplay - 1);
                    showUntilPageNumber = numberOfPages;
                }
                else if (currentPage < Math.Ceiling((float)numberOfIndexesToDisplay / 2))
                {
                    showFromPageNumber = 1;
                    showUntilPageNumber = numberOfIndexesToDisplay;
                }
                else
                {
                    showFromPageNumber = currentPage - (int)(Math.Ceiling((float)numberOfIndexesToDisplay / 2) - 1);
                    showUntilPageNumber = currentPage + (int)(numberOfIndexesToDisplay / 2);
                }
            }
            else
            {
                showFromPageNumber = 1;
                showUntilPageNumber = numberOfPages;
            }

            for (int i = showFromPageNumber; i <= showUntilPageNumber; i++)
            {
                if (i != currentPage)
                {
                    <a asp-action="ChangePage" asp-route-id="@i">[ @i ] </a>
                }
                else
                {
                    <Text>[ X ]</Text>
                }
            }
        }
    </em>
</div>

<div>
    <a asp-action="Create">@ViewData["CreateActionText"]</a>
</div>
@if (
       @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "2" ||
       @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "3"
   )
{
    <div>
        <a asp-action="SwitchShowOption">@ViewData["DisplayOption"]</a>
    </div>
}
<div>
    <a href="@ViewData["HomePath"]">@ViewData["GoBackActionText"]</a>
</div>
