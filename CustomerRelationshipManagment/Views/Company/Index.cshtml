@model IEnumerable<CustomerRelationshipManagment.Models.CompanyModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Companies</h1>


<div class="col-md-4">
    <table>
        <tr>
            <th>
                <form action="/Company/Filter">
                    <table>
                        <tr>
                            <th>
                                <label for="industryIdFrom">Industry id from:</label><br>
                                <input type="number" id="industryIdFrom" name="industryIdFrom"><br>
                                <label for="whenAddedFrom">Added since:</label><br>
                                <input type="datetime-local" id="whenAddedFrom" name="whenAddedFrom"><br><br>
                            </th>
                            <th>
                                <label for="industryIdFrom">Industry id to:</label><br>
                                <input type="number" id="industryIdFrom" name="industryIdTo"><br>
                                <label for="whenAddedFrom">Added until:</label><br>
                                <input type="datetime-local" id="whenAddedTo" name="whenAddedTo"><br><br>
                            </th>
                        </tr>
                    </table>
                    <input type="submit" value="Filter">
                </form>
            </th>
        </tr>
    </table>
</div>


<table class="table">
    <thead>
        <tr>
            @if (
            @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "2" ||
            @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "3"
          )
            {
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
            }
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nip)
            </th>
            <th>
                Industry
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                Creator
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @if (
                  @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "2" ||
                  @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "3"
              )
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Nip)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Industry) [@item.IndustryId.ToString()]
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Creator) [@item.CreatorId.ToString()]
                </td>
                @if (
               @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "2" ||
               @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "3"
           )
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">@ViewData["EditActionText"]</a>
                        @if (
                           @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "3"
                      )
                        {
                            <a asp-action="Delete" asp-route-id="@item.Id">@ViewData["DeleteActionText"]</a>
                            <a asp-action="Recreate" asp-route-id="@item.Id">@ViewData["RecreateActionText"]</a>
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<div>
    <em>
        <a asp-action="PreviousPage">@ViewData["PreviousPageText"]</a> |
        <a asp-action="NextPage">@ViewData["NextPageText"]</a> :
        @{
            int currentPage = (int)ViewData["CurrentPage"];
            int numberOfPages = (int)ViewData["NumberOfPages"];
            int numberOfIndexesToDisplay = (int)ViewData["NumberOfIndexesToDisplay"];
            int pagesRemaining = numberOfPages - currentPage;
            int showFromPageNumber;
            int showUntilPageNumber;

            if (numberOfPages > 10)
            {
                if (pagesRemaining < Math.Ceiling((float)numberOfIndexesToDisplay / 2))
                {
                    showFromPageNumber = numberOfPages - (int)(numberOfIndexesToDisplay - 1);
                    showUntilPageNumber = numberOfPages;
                }
                else if (currentPage < Math.Ceiling((float)numberOfIndexesToDisplay / 2))
                {
                    showFromPageNumber = 1;
                    showUntilPageNumber = numberOfIndexesToDisplay;
                }
                else
                {
                    showFromPageNumber = currentPage - (int)(Math.Ceiling((float)numberOfIndexesToDisplay / 2) - 1);
                    showUntilPageNumber = currentPage + (int)(numberOfIndexesToDisplay / 2);
                }
            }
            else
            {
                showFromPageNumber = 1;
                showUntilPageNumber = numberOfPages;
            }

            for (int i = showFromPageNumber; i <= showUntilPageNumber; i++)
            {
                if (i != currentPage)
                {
                    <a asp-action="ChangePage" asp-route-id="@i">[ @i ] </a>
                }
                else
                {
                    <Text>[ X ]</Text>
                }
            }
        }
    </em>
</div>

<div>
    <a asp-action="Create">@ViewData["CreateActionText"]</a>
</div>

@if (
     @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "2" ||
     @User.FindFirst(claim => claim.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "3"
 )
{
    <div>
        <a asp-action="SwitchShowOption">@ViewData["DisplayOption"]</a>
    </div>
}

<div>
    <a href="@ViewData["HomePath"]">@ViewData["GoBackActionText"]</a>
</div>